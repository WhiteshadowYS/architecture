# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  fastlane_require 'dotenv'

  lane :initEnv do |options|
    environment = options[:environment]
    unless environment.nil?
        Dotenv.overload '../../.local/.env.' + environment
    end
  end

  desc "Develop IOS lane"
  lane :develop do |options|
    initEnv(environment: "develop")
    version = "#{ENV["MAJOR_VERSION"]}.#{ENV["SPRINT_NUMBER"]}.#{ENV["RELEASE_TYPE"]}"
    increment_version_number(
      xcodeproj: "Runner.xcodeproj",
      version_number: version,
    )
    increment_build_number(
      xcodeproj: "Runner.xcodeproj",
    )
    cert
    sigh
    build_app(workspace: "Runner.xcworkspace", scheme: "develop")
    enable_automatic_code_signing(path: "Runner.xcodeproj")
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
    slack(message: "Develop IOS build was Successful! Uploading to TestFlight...")
  end

  desc "Staging IOS lane"
  lane :staging do
    initEnv(environment: "staging")
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    cert
    sigh
    build_app(workspace: "Runner.xcworkspace", scheme: "staging")
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
    slack(message: "Staging IOS build was Successful! Uploading to TestFlight...")
  end

  desc "Production IOS lane"
  lane :production do
    initEnv(environment: "production")
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    cert
    sigh    
    build_app(workspace: "Runner.xcworkspace", scheme: "production")
    enable_automatic_code_signing(path: "Runner.xcodeproj")
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
    slack(message: "Production IOS build was Successful! Uploading to TestFlight...")
  end
end
